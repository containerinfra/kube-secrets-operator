name: Release
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write
  packages: write
  attestations: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Download Syft
        uses: anchore/sbom-action/download-syft@v0.20.9
      - name: Download Cosign
        uses: sigstore/cosign-installer@v3.10.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Run GoReleaser
      #   uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
      #   with:
      #     args: release --clean
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Helm
        uses: azure/setup-helm@v4
      - name: Publish Helm charts
        env:
          VERSION: ${{ github.ref_name }}
          CHART_NAMESPACE: ${{ github.repository_owner }}/${{ github.repository }}/charts
        run: |
          for chart in chart/*/; do
            if [ -f "${chart}Chart.yaml" ]; then
              CHART_NAME=$(basename "${chart}")
              echo "Packaging chart: ${CHART_NAME}"
              helm package "${chart}" --version "${VERSION}" --app-version "${VERSION}"
              
              echo "Pushing chart: ${CHART_NAME}-${VERSION}.tgz"
              # Capture both stdout and stderr
              PUSH_OUTPUT=$(helm push "${CHART_NAME}-${VERSION}.tgz" oci://ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts 2>&1)
              echo "${PUSH_OUTPUT}"
              
              # Extract digest from helm push output
              DIGEST=$(echo "${PUSH_OUTPUT}" | grep "Digest:" | awk '{print $2}')
              
              if [ -n "${DIGEST}" ]; then
                echo "Signing chart with digest: ${DIGEST}"
                cosign sign --yes "ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts/${CHART_NAME}@${DIGEST}"
              else
                echo "Warning: Could not extract digest, signing with tag"
                cosign sign --yes "ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts/${CHART_NAME}:${VERSION}"
              fi
            fi
          done
